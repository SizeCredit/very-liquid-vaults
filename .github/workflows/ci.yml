name: CI

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  sizes:
    strategy:
      fail-fast: true

    name: Contract sizes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Contract sizes
        run: |
          forge --version
          forge build --sizes --skip test --skip script
        id: build

  fmt:
    strategy:
      fail-fast: true

    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Format
        run: |
          forge fmt --check
        id: fmt

  test:
    strategy:
      fail-fast: true

    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Test
        run: |
          forge test -vvv
        id: test

  fork:
    strategy:
      fail-fast: true

    name: Fork Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Fork Tests
        run: |
          forge test -vvv
        env:
          API_KEY_ALCHEMY: ${{ secrets.API_KEY_ALCHEMY }}
          FOUNDRY_INVARIANT_RUNS: 0
          FOUNDRY_INVARIANT_DEPTH: 0
          FOUNDRY_PROFILE: fork

  slither:
    strategy:
      fail-fast: true

    name: Slither
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Run Slither
        uses: crytic/slither-action@v0.4.0
        id: slither
        with:
          fail-on: low


  solhint:
    strategy:
      fail-fast: true

    name: Solhint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Run solhint
        run: npx solhint "src/**/*.sol" --max-warnings 0

  semgrep:
    strategy:
      fail-fast: true
    
    name: Semgrep
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Semgrep
        run: python3 -m pip install semgrep

      - name: Run semgrep
        run: semgrep --config semgrep src

  invariants:
    needs: [sizes, fmt, test, slither, solhint]
    strategy:
      fail-fast: true
      matrix:
        fuzzer: [echidna, medusa]

    name: Invariants
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Install Crytic-compile
        run: |
          pip install crytic-compile

      - name: Install Slither
        run: |
          pip install slither-analyzer

      - name: Install Fuzzer (${{ matrix.fuzzer }})
        run: |
          if [[ "${{ matrix.fuzzer }}" == "echidna" ]]; then
            TOOL="echidna"
            URL="https://github.com/crytic/echidna/releases/download/v2.2.6/echidna-2.2.6-x86_64-linux.tar.gz"
          elif [[ "${{ matrix.fuzzer }}" == "medusa" ]]; then
            TOOL="medusa"
            URL="https://github.com/crytic/medusa/releases/download/v1.3.0/medusa-linux-x64.tar.gz"
          else
            echo "Unsupported fuzzer: ${{ matrix.fuzzer }}"
            exit 1
          fi

          wget "$URL" -O "$TOOL.tar.gz"
          tar -xvkf "$TOOL.tar.gz"
          rm "$TOOL.tar.gz"
          mv $TOOL /usr/local/bin/
          $TOOL --version

      - name: Run Fuzzer (${{ matrix.fuzzer }})
        run: |
          make ${{ matrix.fuzzer }}

  coverage:
    strategy:
      fail-fast: true

    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Coverage
        run: |
          forge coverage --no-match-coverage "(script|test)" --report lcov

      - name: Coveralls
        uses: coverallsapp/github-action@v2

  abi:
    strategy:
      fail-fast: true

    name: ABI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: ABI
        run: |
          forge build --build-info

      - name: Archive ABI
        uses: actions/upload-artifact@v4
        with:
          name: abi
          path: |
            out/VeryLiquidVault.sol/VeryLiquidVault.json

  upload-selectors:
    if: github.ref == 'refs/heads/main'
    strategy:
      fail-fast: true

    name: Upload Selectors
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Upload Selectors
        run: |
          forge selectors upload --all
